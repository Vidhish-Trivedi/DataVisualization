<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2020-clean (2020)' inline='true' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2020' name='excel-direct.0qr5s2d0ebd7q717tncu419dqul7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/Desktop/DV-A1/FlowsAndCleanData/2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0qr5s2d0ebd7q717tncu419dqul7' name='2020-clean' table='[&apos;2020-clean$&apos;]' type='table'>
          <columns gridOrigin='A1:Q806:no:A1:Q806:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MMMM' name='Incident date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Perpetrator' ordinal='2' />
            <column datatype='string' name='Weapons use' ordinal='3' />
            <column datatype='string' name='Total health worker killed' ordinal='4' />
            <column datatype='string' name='Total health worker kidnapped' ordinal='5' />
            <column datatype='string' name='Deprivation of liberty' ordinal='6' />
            <column datatype='string' name='Total health worker arrested' ordinal='7' />
            <column datatype='string' name='Total health worker threatened/intimidated' ordinal='8' />
            <column datatype='string' name='Total health worker injured' ordinal='9' />
            <column datatype='string' name='Total health worker assaulted' ordinal='10' />
            <column datatype='string' name='Total health worker sexual violence' ordinal='11' />
            <column datatype='string' name='Total number of attacks on facilities which reported destruction' ordinal='12' />
            <column datatype='string' name='Total number of attacks on facilities which reported damage' ordinal='13' />
            <column datatype='string' name='Health transportation destroyed' ordinal='14' />
            <column datatype='string' name='Health transportation damaged' ordinal='15' />
            <column datatype='string' name='Health transportation stolen/highjacked' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0qr5s2d0ebd7q717tncu419dqul7' name='2020-clean' table='[&apos;2020-clean$&apos;]' type='table'>
          <columns gridOrigin='A1:Q806:no:A1:Q806:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MMMM' name='Incident date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Perpetrator' ordinal='2' />
            <column datatype='string' name='Weapons use' ordinal='3' />
            <column datatype='string' name='Total health worker killed' ordinal='4' />
            <column datatype='string' name='Total health worker kidnapped' ordinal='5' />
            <column datatype='string' name='Deprivation of liberty' ordinal='6' />
            <column datatype='string' name='Total health worker arrested' ordinal='7' />
            <column datatype='string' name='Total health worker threatened/intimidated' ordinal='8' />
            <column datatype='string' name='Total health worker injured' ordinal='9' />
            <column datatype='string' name='Total health worker assaulted' ordinal='10' />
            <column datatype='string' name='Total health worker sexual violence' ordinal='11' />
            <column datatype='string' name='Total number of attacks on facilities which reported destruction' ordinal='12' />
            <column datatype='string' name='Total number of attacks on facilities which reported damage' ordinal='13' />
            <column datatype='string' name='Health transportation destroyed' ordinal='14' />
            <column datatype='string' name='Health transportation damaged' ordinal='15' />
            <column datatype='string' name='Health transportation stolen/highjacked' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q806:no:A1:Q806:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident date]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Incident date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perpetrator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Perpetrator]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Perpetrator</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weapons use</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Weapons use]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Weapons use</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker killed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker killed]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker killed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker kidnapped</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker kidnapped]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker kidnapped</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deprivation of liberty</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Deprivation of liberty]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Deprivation of liberty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker arrested</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker arrested]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker arrested</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker threatened/intimidated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker threatened/intimidated]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker threatened/intimidated</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker injured</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker injured]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker injured</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker assaulted</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker assaulted]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker assaulted</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total health worker sexual violence</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total health worker sexual violence]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total health worker sexual violence</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of attacks on facilities which reported destruction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total number of attacks on facilities which reported destruction]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total number of attacks on facilities which reported destruction</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of attacks on facilities which reported damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total number of attacks on facilities which reported damage]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Total number of attacks on facilities which reported damage</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health transportation destroyed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Health transportation destroyed]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Health transportation destroyed</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health transportation damaged</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Health transportation damaged]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Health transportation damaged</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health transportation stolen/highjacked</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Health transportation stolen/highjacked]</local-name>
            <parent-name>[2020-clean]</parent-name>
            <remote-alias>Health transportation stolen/highjacked</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-clean_E9873FF824814DEEA974E0D80D31A46A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Month' datatype='date' default-format='*mmmm' name='[Incident date]' role='dimension' type='ordinal' />
      <column caption='Reported Perpetrator' datatype='string' name='[Perpetrator]' role='dimension' type='nominal' />
      <column datatype='string' name='[Weapons use]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2020-clean' datatype='table' name='[__tableau_internal_object_id__].[2020-clean_E9873FF824814DEEA974E0D80D31A46A]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Perpetrator]' derivation='None' name='[none:Perpetrator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Weapons use]' derivation='None' name='[none:Weapons use:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Country,Reported Perpetrator)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Perpetrator:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country,Weapons use)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Weapons use:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Perpetrator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Multiple&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Civilian&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;NoInformation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NonStateActor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;StateForces&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Weapons use:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ExplosiveWeapons&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;NoInformation&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Firearm&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2020-clean' id='2020-clean_E9873FF824814DEEA974E0D80D31A46A'>
            <properties context=''>
              <relation connection='excel-direct.0qr5s2d0ebd7q717tncu419dqul7' name='2020-clean' table='[&apos;2020-clean$&apos;]' type='table'>
                <columns gridOrigin='A1:Q806:no:A1:Q806:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='MMMM' name='Incident date' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Perpetrator' ordinal='2' />
                  <column datatype='string' name='Weapons use' ordinal='3' />
                  <column datatype='string' name='Total health worker killed' ordinal='4' />
                  <column datatype='string' name='Total health worker kidnapped' ordinal='5' />
                  <column datatype='string' name='Deprivation of liberty' ordinal='6' />
                  <column datatype='string' name='Total health worker arrested' ordinal='7' />
                  <column datatype='string' name='Total health worker threatened/intimidated' ordinal='8' />
                  <column datatype='string' name='Total health worker injured' ordinal='9' />
                  <column datatype='string' name='Total health worker assaulted' ordinal='10' />
                  <column datatype='string' name='Total health worker sexual violence' ordinal='11' />
                  <column datatype='string' name='Total number of attacks on facilities which reported destruction' ordinal='12' />
                  <column datatype='string' name='Total number of attacks on facilities which reported damage' ordinal='13' />
                  <column datatype='string' name='Health transportation destroyed' ordinal='14' />
                  <column datatype='string' name='Health transportation damaged' ordinal='15' />
                  <column datatype='string' name='Health transportation stolen/highjacked' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Afghanistan_CntVSMonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Incidents in Afghanistan</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Month' datatype='date' default-format='*mmmm' name='[Incident date]' role='dimension' type='ordinal' />
            <column-instance column='[Incident date]' derivation='Count' name='[cnt:Incident date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident date]' derivation='None' name='[none:Incident date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' scope='rows' value='Number of Incidents' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Incident date:ok]</cols>
      </table>
      <simple-id uuid='{6459FDC4-4475-4838-B289-78180AE4E741}' />
    </worksheet>
    <worksheet name='CntVSTypePerpetrator'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column caption='Reported Perpetrator' datatype='string' name='[Perpetrator]' role='dimension' type='nominal' />
            <column-instance column='[Perpetrator]' derivation='Count' name='[cnt:Perpetrator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perpetrator]' derivation='None' name='[none:Perpetrator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' direction='DESC' using='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' scope='rows' value='Count of Reported Perpetrator Type' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' />
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]</cols>
      </table>
      <simple-id uuid='{6153256D-0EAA-4BF4-BA27-5FA01608E3CF}' />
    </worksheet>
    <worksheet name='CountryCnt'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Incidents Reported, Country-wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='Count' name='[cnt:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' direction='DESC' using='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' scope='rows' value='Number of Incidents' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{82DFD8A3-D781-40F1-A36E-E19CF20C492C}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='Count' name='[cnt:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]</column>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' />
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' />
              <geometry column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F364D345-D510-4CC7-B344-278185658006}' />
    </worksheet>
    <worksheet name='MapZoomed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Focus on Asia, Middle East, and Central Africa</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='Count' name='[cnt:Country:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]</column>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]' field-type='quantitative' max='11656834.332697231' min='-2084565.5937388074' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]' field-type='quantitative' max='6397446.2661907598' min='-1525896.739988365' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' />
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' />
              <geometry column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F33A8415-E700-4C25-A021-2C1E38BF3CDB}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Weapons use]' role='dimension' type='nominal' />
            <column-instance column='[Weapons use]' derivation='Count' name='[cnt:Weapons use:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Weapons use]' derivation='None' name='[none:Weapons use:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Exclusions (Country,Weapons use)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Weapons use:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Weapons use:nk]' member='&quot;ExplosiveWeapons&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Weapons use:nk]' member='&quot;Firearm&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;CAR&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Weapons use:nk]' member='&quot;NoInformation&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Weapons use:nk]' member='&quot;Other&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country:nk]' />
                  <hierarchy name='[none:Weapons use:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' direction='DESC' using='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Weapons use:qk]' />
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Exclusions (Country,Weapons use)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Weapons use:qk]' scope='rows' value='Weapons used' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Weapons use:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{929D17B1-FCA5-49DC-B4CC-8BF1C73661DB}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Reported Perpetrator' datatype='string' name='[Perpetrator]' role='dimension' type='nominal' />
            <column-instance column='[Perpetrator]' derivation='Count' name='[cnt:Perpetrator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Perpetrator]' derivation='None' name='[none:Perpetrator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' direction='DESC' using='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' />
          <filter class='categorical' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Perpetrator:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Perpetrator:nk]' member='&quot;NoInformation&quot;' />
                <groupfilter function='member' level='[none:Perpetrator:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' scope='rows' value='Reported Perpetrators' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{CCD92EAB-164A-42DE-84CB-ECE8AFEDD423}' />
    </worksheet>
    <worksheet name='Sheet 9 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Categories of Perpetrators in Different Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Reported Perpetrator' datatype='string' name='[Perpetrator]' role='dimension' type='nominal' />
            <column-instance column='[Perpetrator]' derivation='Count' name='[cnt:Perpetrator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Perpetrator]' derivation='None' name='[none:Perpetrator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Exclusions (Country,Reported Perpetrator)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Perpetrator:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Perpetrator:nk]' member='&quot;Civilian&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Perpetrator:nk]' member='&quot;Multiple&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Perpetrator:nk]' member='&quot;NoInformation&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Perpetrator:nk]' member='&quot;NonStateActor&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Perpetrator:nk]' member='&quot;StateForces&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country:nk]' />
                  <hierarchy name='[none:Perpetrator:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]' direction='DESC' using='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' />
          <filter class='categorical' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Perpetrator:nk]' />
              <groupfilter function='member' level='[none:Perpetrator:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]</column>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Exclusions (Country,Reported Perpetrator)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' scope='rows' value='Reported Perpetrators' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{E431600A-2313-4079-A5F9-4697FF93E0F0}' />
    </worksheet>
    <worksheet name='Syria_CntVSMonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Incidents in Syria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Month' datatype='date' default-format='*mmmm' name='[Incident date]' role='dimension' type='ordinal' />
            <column-instance column='[Incident date]' derivation='Count' name='[cnt:Incident date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident date]' derivation='None' name='[none:Incident date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' scope='rows' value='Number of Incidents' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Incident date:ok]</cols>
      </table>
      <simple-id uuid='{A549D0C2-EDE9-4053-8945-25744DAE5427}' />
    </worksheet>
    <worksheet name='WeaponsPIE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Type of Weapons Used</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column datatype='string' name='[Weapons use]' role='dimension' type='nominal' />
            <column-instance column='[Weapons use]' derivation='Count' name='[cnt:Weapons use:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weapons use]' derivation='None' name='[none:Weapons use:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='1040' />
            <format attr='cell-h' value='1040' />
            <format attr='cell' value='130' />
            <format attr='cell-q' value='650' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]' />
              <wedge-size column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Weapons use:qk]' />
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]' />
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Weapons use:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B01540A9-5F7C-4254-93D4-D67AC8447466}' />
    </worksheet>
    <worksheet name='World_CntVSMonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Incidents Reported - The World</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-clean (2020)' name='federated.0fyq4610xltdwg18a1wus0rv6l8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyq4610xltdwg18a1wus0rv6l8h'>
            <column caption='Month' datatype='date' default-format='*mmmm' name='[Incident date]' role='dimension' type='ordinal' />
            <column-instance column='[Incident date]' derivation='Count' name='[cnt:Incident date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident date]' derivation='None' name='[none:Incident date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' scope='rows' value='Number of Incidents' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]</rows>
        <cols>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Incident date:ok]</cols>
      </table>
      <simple-id uuid='{AE0C2642-2EA7-4E58-8D6E-6BC0A6923531}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Syria_CntVSMonth' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98000' id='5' name='Afghanistan_CntVSMonth' w='49200' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='59' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='58' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Syria_CntVSMonth' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='5' is-fixed='true' name='Afghanistan_CntVSMonth' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{34CC22BC-1ABE-4995-863F-968FEE5B40BA}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='1' param='vert' removable='false' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='3667' id='3' type-v2='title' w='99000' x='500' y='889' />
            <zone h='11222' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99000' x='500' y='4556' />
            <zone h='83333' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99000' x='500' y='15778'>
              <flipboard active-id='10' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Map' captured-sheet='Map' id='1' />
                  <story-point caption='Focus on Asia, Africa and Middle East' captured-sheet='MapZoomed' id='2'>
                    <capturedDeltas>
                      <worksheet name='MapZoomed'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Latitude (generated)]' field-type='quantitative' max='6291141.8236180367' min='-1372990.0803042245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[Longitude (generated)]' field-type='quantitative' max='13107166.27359535' min='-1604203.0524130864' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Country-wise count of incidents' captured-sheet='CountryCnt' id='3'>
                    <capturedDeltas>
                      <worksheet name='CountryCnt'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' scope='rows' value='Number of Incidents' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Month-wise count of incidents in the world' captured-sheet='World_CntVSMonth' id='4'>
                    <capturedDeltas>
                      <worksheet name='World_CntVSMonth'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Incident date:qk]' scope='rows' value='Number of Incidents' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Comparison of Number of Incidents in Syria and Afghanistan' captured-sheet='Dashboard 1' id='9' />
                  <story-point caption='Count of type of perpetrators' captured-sheet='CntVSTypePerpetrator' id='7'>
                    <capturedDeltas>
                      <worksheet name='CntVSTypePerpetrator'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]' scope='rows' value='Reported Incidents' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Country-Wise distribution of type of perpetrators' captured-sheet='Sheet 9 (2)' id='10' />
                  <story-point caption='Weapons used in incidents - World' captured-sheet='WeaponsPIE' id='8' />
                  <story-point caption='Country-Wise distribution of weapons used' captured-sheet='Sheet 10' id='11' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4FEB893D-C27C-4141-AE57-621F4A6D559D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7006AC6F-01E2-4F7F-89F6-9B270962863E}' />
    </window>
    <window class='worksheet' name='MapZoomed'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Country:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05C4BB49-FD31-4E4A-9E26-7D6F7CBF3B7A}' />
    </window>
    <window class='worksheet' name='CountryCnt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03886FF1-F89D-4242-9996-E450D3E83B85}' />
    </window>
    <window class='worksheet' name='World_CntVSMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Incident date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E568EE0B-F0E1-4298-BEC1-9180DBF6A03C}' />
    </window>
    <window class='worksheet' name='Syria_CntVSMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Incident date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0B93292-F0CB-4000-9F11-12075947FC3D}' />
    </window>
    <window class='worksheet' name='Afghanistan_CntVSMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Incident date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A6ACF2F-6A32-469E-9757-A7363CAC4893}' />
    </window>
    <window class='worksheet' name='CntVSTypePerpetrator'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{593A0F31-840C-4ADB-B684-C8F9FA635718}' />
    </window>
    <window class='worksheet' name='WeaponsPIE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF36A740-6DAD-4139-B3AC-3310765D12C5}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{14428BE4-2373-4CAA-A8BC-0B75523C5C16}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Afghanistan_CntVSMonth'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Syria_CntVSMonth'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D90DA17D-193C-4D0E-8BD0-94F4896D0D71}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12937063-4CE7-4162-BED4-43841CB9C926}' />
    </window>
    <window class='worksheet' name='Sheet 9 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[cnt:Perpetrator:qk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Perpetrator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{855C885F-1D8C-42F5-9C09-728960F0D97F}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Country:nk]</field>
            <field>[federated.0fyq4610xltdwg18a1wus0rv6l8h].[none:Weapons use:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A867CD89-DE33-4E07-BB6C-25FD862AE738}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Afghanistan_CntVSMonth' width='192'>
      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
      +/n/cYKeoRiXr5QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CntVSTypePerpetrator' width='192'>
      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
      xrbFPf8fihTzGiIknEAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CountryCnt' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfY0lEQVR4nO2deXBb133vv3cBLgAuILiAiyiKojaKWiyJlu1nu0o93hI742Zpx5PUiZsm
      L9PMuMlr3kvH7Xud8Yub9k1T94++Tl+bl0n7MuNEja04sZV4SWzLm2zJ2ijuFHeCJAgCIABi
      vdt5f1CkRBEXBAjg3kvwfP6xCfzuOT/dH773nu13DkMIIaBQtiis0Q5QKEZCBUDZ0lABULY0
      VACULQ0VAGVLs0oAw90fw+OPQY7OY2YhmfHCvu7enCqaGhnAlb5rAIDJsTHIGnbz8/Mr/9/d
      p11HLBxJW8bN1y9DFBEXz5/H+QtXoKa5RoyFEY6JGbwvPUo11gAQnJlE/9gUAGCg+zKujXtW
      fX9zXfzNX/ijSYQufoDa25oxm7BAjvrR5BIwk7DDe+0iZMYKu2CFw1mHea8Hl8U4XA2tKOeS
      GJ2Yxp6DxxCeGcWizOPQ/t0IeKcwMjmLll37cObd93DkrvuWbtD4ONw7t+Pi+x9CYa24/a47
      MHT1IlhHNSptFoAouHLhAq6OTuHgvj24ePEyKmubYGNTCC5EYC2rwmzXx+Db9uLwjiYMjU2i
      ZeceNNZWIZVIIrkwg0vXvLBYLDh+9BBCkz1QXDtxfFcNpsdGUNuyC97JMXA8h3g4iPoGNyRb
      GYb6rmIhKqPz+DHwjGY8SoJSjTUA9I9NQVVVqNuq8d75S7jv/ocxOtSL0GIcja37ca2/G9FQ
      GIdvv+vWJhCLQzvr0DU8u+S8xwM5Oo+p+SgUhocQT2Ln0U4EfVMQHJU42nkcU+ODOPvBB+A4
      Fh+e/RBdPYM40L57yZHhMdxxxx0Y7r+K5tY2HNq/+6a6ZCisDW1VMoaH+pEqb0XH3jZ4pjyY
      6b2A8rYj2LVjG/rOf4AFmcG5cx9hataHw0eOYSEwh8amHbit8ygiQT8kWQHPL2nZM+VBMjQL
      5/b9kJMRAIBr51E4Ux688ZszcNWU4dyFHkxMTmJsqBd1O/YBi7OYj8qQZRmx2T4Mz6eK+NMz
      C6UZaxAZY9eGMDk8iKBsQ1tbG3a31mN6LoJju2oxOheFu7EFR9uqMDAdWtsH2Lb3KOZGugEA
      i8E5dPUOLX2x/ERklv5XEWO4cOE8OKECzc3NUMHh8KGDcLvrwV63tfMMzp8/D6vDlT4EzFL1
      QlUjfCNd6Ls2BgCoqKvF4KVzGJuaRf22ZlhAcPjwYYBhlspmgEqXDZc/ugihsgo2C4e+3v5V
      ZTMMs+JzLORHOCGDkUWgrAHi9CVU7zgIq6MS1RX261dIGBkehyBYoapbY26wFGM9M9iFux55
      HF/8wz9Az6Wu6xYc4pF5XO5euo657jRJ+MFstZlgMRbGb97/GI88/ABKvJVDuYm+qxex4J9H
      0+ET2FnrWPl8ywmAQrkZOgxK2dJQAVC2NFQAlC0NFQCA2cFufNQ7gl++/PKqz6Pzk1hIRtHX
      PWGQZ5RCc2us+XXstwTJaBQRMQbfQhxn33sLoTiw0zaNi5MErUc7Mdt1BYspGXfevstoVyl5
      cmus6SgQgIWZKcxFYlCEMlSQBEJJoKPJgvEgkFRkVAk2ADY0t9QZ7SolT26N9YYFQAiBqqqg
      +tlcLM+i5kIpxzrvN4CiKOA4rlD+UExMKcY6p05w94dnMD4xiSsDI1CK5RHFFHR/eAZDkx5c
      vnAJiRIOdtYCSIZ9CMVlRCUVangeMamYblGMZDnWgWAETe4qiCUsgJyaQEoqCRnA7FwArS3b
      lj4rwdciZSnWKs/DN+fHtqaGpc9KMNa0D0DJmlKMNZ0Io2xpdBfA6dOncfXqVZw6dQqBQEDv
      6imUVeg6ExyJRDA7OwtBENDe3o6amho9q6dQ1qB7H0AURQSDQQwMDOD48eMoKyvLp3qKjpRi
      H8CQTrAycxls/UEwnCWfqik6U4oC0L0PQMQ44j/7Iyiej/WumkJZg/6jQJwFYDlw9Qd0r5pC
      uRXdBaD6BwFFBEks6F01hbIG3QWgeHvAVDZRAVBMgf4CmOsFv/1OEDGmd9UUyhr0bwIFR8E2
      HgGJB/WumkJZQ04CGO29gmnfPLq6eiBtYPCUpKJgbE4wNidIKpJ7ARRKgcl6JjgZ9mF0fBo2
      xY5jjU6EUwQui5pTppA6exVsXQeItRxKPAhZ1to3mFIsNpIRVspkfTdsTjdOnLgHSYbD2LQP
      HW4GDJYmRbKdHEnNdYNvOgzG4YIqxmgwTAqRUxgaHkVdTS1mAxG0t+9CaU1/3SCnX6C1ogpW
      AAf2VWyoMsXbDcvBzwOqDJIMb6gMSvFheAECp8DvD0FlyNJmwSS3t/1mQd9HcGoRbFktiJyi
      w6AmRk7FIao8rA4r5EgEksrAwef2tt8s6CYANeoDU14PYOkJA2Ur7MG/OeEFB/buazfaDV3Q
      bRhU8XxMlz9QTId+ApgfALftmF7VUShZoZsAVF8/2Nq9Nz5gWBCS7sg6CkU/dBEAUSSAqEtt
      /+swQgWQWtSjegpFE10EoPqvgXXtXPUZY3PSoVCK4egiAGWuF1zTkVWfMTYnHQqlGI4+bwBf
      L7iGQ6s/tDlBaBOIYjA6vQH6wVS1rPqMsbnoG4BiOEUXAElFwZTVgGFWV8XYKmgfgGI4RReA
      4usD5+5Y8zljq6ICoBhO8QXgvbq2/Y/lUSCaE0AxlqILQJ3rBZtmCQQdBqWYgawXwxE5hb7e
      bjCMA6JVwKEs14irkVmwZbVrPqcCoJiBrAWggkV5pRPJFLl+QEYbytjMa8RJbB6Mc3v6zC/G
      AiIlaFaYztAkpNVkfTcYBlBUFq07mzA7V4ZKCwOskxEm+wfA13do3nQRhAaEYihZ9wFYzoK2
      XbsgCPaV02HWQ565BDZNB3gFhsm2egqlKBS1E6zOD6UdAl2Brgg1JUROYXCgD6Oj4xveAWSz
      ULT2ByEqICfBWB2aNisrQm3OYrlB2QBLOcFAIJbE/g3uALJZKJoA1OAY2OpdmY2ESpBkBAwV
      gKlYyglmsaOhFmPB8IZ2ANksFE0AyswVsO79GW1YexVIMgRge7HcoGyAm3OCa+vWDmGXEkXr
      A6hz3eC3H89sROcCKAZTPAEsjINxNme0YQQqAIqxFEUAJBUFWAsYNnMLi7FTAVCMpSgCUOYH
      wNUfXNeOsVXRnACKoRRFAKq3G1zj4XXtmOujQBSKURTnDeDtSbsC9FboNukUoynOG2BxFmy5
      e127pcT4UDFcoFCyouACUKM+sBX1WdkyVgcgJwrtAoWSNYUXgK8fXH2GBXC3UmJT65TNRdYC
      WFog1Y9AIIjegWFo/WwVbzfYhvVHgCgUM5B9PsD1QxPGZ/zYX29HIJlmgZQiQrzwIwhNnVkn
      uhCGhSxJdGm0TtD8i9VkfTeWD02osrO45o2go44Bx9yyQIrnYf/sv4BrvA1MljdaspaBUxNg
      hMrcvadQ8iRrAax3aIKiKHjvvffQ2tqKwTfP4IEHHshu5aDdBZIIUwFQDKFgnWCO4+BwOHDh
      wgUcO3YMHo8nq+uW5gLocgiKMRRMAKIoIhaLobGxEWfPnoXbvf48AAAwtko6F0AxjIL1iKxW
      K+67776cr2PoJrkUAzF8SIDOBpsQJYWBwUGoIgPR5sh6D6jNiAkE4IIaGDHaDcotCGU1qGm0
      YnhoJKs9oDYrxgtAqAARY0a7QbkJVSUQk1EoznpUN27Pag+ozYrxArDTcwLMBmuxYd++fQAA
      V1WVwd4UF91OidSC7hFKMRLjBWB1ALQJRDEITQHMTE/j3TffgqSHF3QdkKHoGmuToSmAWNgP
      wlhBNy4sfbZyrDUEIOHC+S4kRRG6PJtLbGhtc6FzrE2GhgAsuPue43BWOXW5KYxQsbSVCsUA
      9I212dBsAkVjOv4g6aHZhqJrrE2GpgBkKYzBrvEbHSMlhYG+q+i70o0rAyNQCugEXRFqLGti
      vYVIOxGWiATgC8QRVhZhuenzok2PWyugxMMg9LikonNrRphWrLcKaQVgr6xBbXUtdokWKAAs
      KO70uFpWDUaM0HQ9A0gX662Exi9OhIW3g7eJK6sAizk9zgiVdIMsw1gb662EhgCsqHa70VBf
      r8vYMGOvghqa1KEmylr0jbXZ0OwEEzmGrmvjuqyWo9ukG4uesTYbmgKYnfGizCbo8wagC+IM
      Rc9Ym420ApCSMYBhMDPj1U0AoAIwBL1jbTY033p1TS2oa2J1agKVg4hbdzLGaPSMtdlI+wZY
      9Hnx9nsfYGLCsyWfCluJtLG+Pul55WovLl+4hEQhZz1NRlrRV7fsQuf+AALhlOYeoAWHLogz
      hHSxVuUkfME4tjXWISIloaoECrZYTnB1jQsLiaB+Y8MsB0JUMIzhOTpbjltjzQpOnLj3rlus
      tlhOMGerwIl79+jmCD013jj0jrWZ0HzcLs4O4/kXX9NtgRQdCjUOvWNtJrQFIMURHJmGXsvT
      GLok2jD0jrWZ0GwC1bi2YedhHla9PKFbJBqG7rE2EWnfAIlIAFcHRsEpso5NILo/kBEYEWsz
      kVYA9soa7NvZjLLKihujQEoKg4MDCPgDGY9I2iiMrYK+AQwgbay3EJpNoGgsjvLyiht5oqwV
      NS4nvP4gdlbb0h+RlAfEWgnFN5T10UqUjZEu52JNrLcQ2vMA1S54A4kbkyNiBGOeeTS5XdpH
      JOWB4nBBFRdpUowB3BrrrYTmKFBZWTm8ExMQlw0FJ44fO4xtzdtx2+EDsBT4ccEIlXQY1CBu
      jfVWIq0AktEwunt6EJGh28gAY6+iAjAAI2JtJtK2N3irFVZBQGNDpW7tQsZip6fGG4ARsTYT
      ad8A0eAc4hILwcJvyXbhVmKrxzrtG6CqoRUPNbTq7ArFCLZ6rM219JJhQQjNQKDoh6kEsLIi
      lELRCVMJAEIlSJLuD0TRD1MJgLVXgSTpkamGo0oYG5+CFAuht8D7wJoNc0270pwAc8BaYBd4
      xBZjUKFAVQlAtlhKpBEwQgUVgBlQUpiemUFTUxM4KQVJZeDgt1hKpBEwNidIPGi0GxROQGdn
      JwCgsbHRYGeKi6n6AIy9muYEUHTFXAKgo0AUnTGXAGxOuk06RVeyF4AqobunH5HZyYIfkbTM
      UmI8HQal6Ef2nWDWgrqaKjA2HurkTGGPSFqpwwoixmhWWBGhCUeryf5uKCmEIxFYhLqCH5F0
      MyLL0iBRdCP7XxonrByRVFNdLHcoFH0xVScYAF0RStEV0wmAsTgAelYARSdMJwDYXSAJuhyC
      og+mEwA9NZ6iJ+YTAF0QR9ER8wnAXkWXQ1B0w3wCoDkBpocQgldeeQXj4+N48cUXEQpt3tl7
      EwrABRIPGO0GJQMMw6CtrQ2xWAwdHR2Ix+NGu7RhzCcAoQJEjBntBiUDqqoiEAjA6XRClmU0
      NTUZ7dKGMZ8A7PScAMNRJQwOjWBxYR5dXT2QblnqxbIsTpw4gfp4Dw617zbGxwJhukU3dBTI
      BLAWOCscCMdS2NPoRDiVZit8RUTyjb+C8MhzYFvuNtbfPDChAMoBafO2KUsCJYV5vx8N9W6M
      LUTR4WbA3Lrwkedhe/hvoQaGwLedMNDZ/DBdE4hiAjgBhw4dQp27Hgf27dLcNJdv+wTka7/V
      1bVCk1NCzNj4FKTEYlGOSFpFiW29UaownAVc0xEoM5eNdmXD5JQQYxd4zAXC2FktFPyIpJsh
      hNCkmCJR6FwLy/7HIHX9FFzT0YKWqxc5JcRMz8zAXVeHa97Fgh+RdDOSrRKcklzqD1BMDVff
      gVRkGkSMg7E6jHYnZ3JKiFneK2Z7S7Hcuc712WAqgM0B33Yf5GtvwHLgM0a7kjOm7ATT5RCb
      C0vHY5AGXzXUB5/PhzNnziCZTOZ0nXkFQJdEbxoYmxOM1QE1PGWYD263Gy6XK+c+jjkFYK+i
      26NsMiwdn4HU+0vD6ldVFYqilIgAhEq6QdYmg2u9B8rUOcPyuVmWxbFjx3K/rgi+5I3Z3gBD
      Q0P48Y9/XDC7YpdhBAzLL80JTH5kSP2EqBA//hHUdVYSE0Jw8eJFqOqSUM0pAMFcneDm5mYc
      P368YHbFLsMoLAc+C6nvZWMqTy0ide7/IPHyNyF2nQSRU2nNrl69Cr/fv/K3OQVgslEgRVFW
      9kQqhF2xyzAKtroNZHEWJKX/rh7y8JsQ7vkWHJ//IUBUJH7+daTeew5qzL/KrqKiAouLi/D5
      fAAAhuQ5jasoSsEnwkgqguRrfwn77/1TQctNxwcffIADBw6gqqoqgz9RyCNvgdvWqW2jpKB6
      e2DpeCwvf5bryrecYpBNrMXuUwBUWA/9gT5OYan5Ez/5BByf+8HK3BEhKpTRdyD2nAJjccDa
      +Ufg6jvWXGu61aDA9U6wDnsDRaNRjI2NobW1Na0ASCoKafBXkHpeAkkEwTVnaJrIKcijZ8DW
      7QNXt/EnuNT7ElLv/F3e5RiFZc+DSLzyTV0FoIy9C377HasmThmGBb/rPvC77oMy1wfp6kmk
      FibANR2F5egTYMtqAZhUAHrhcDhQX1+PWGx1Bpq6MA7xwo+ghj3g930Kjs//MKtZaTU0icRr
      fwHHZ/4ZjM2Zsz/KbBfkkTfh+NLPkfztMxsux0gYWyWYikYogRFwNbt0qVO88lPYHnpW83uu
      vgPcg9+FGvMj8cunoEbnYHvoWTAsD5A8kWU53yJW8f7775OFhQUS+9mTBS13PVQxTsT+0yT2
      0jdI/JVvE9nbu6Fy5OlLJHbq60RVpJyuU0IeEv3pF4kaD+ZVTjHJNtbSxEck+e7fF9mbJWRv
      N4m/+nRO16S6TpL4y98kaipGTNUJXm6SREN+KPODUOZ6il4nkRKI/tujiL/wFZCYH7aHnoX9
      08+lbS9mA9d0FJaOx5B846+y9yEZQfK1p2F78Ltg7K4Nl2MW+JY7IU99DKIWf0WveOHfIdzx
      n3O6xnr4cVgOfA6JV75prlGg5SZJXFRhve0LkIZeL3qd4pXnwTcfh+NzP4C180mwjpq8y7S0
      PwrW2YzUuX9d15YQFck3/ges/+mpNU2GXMopBvkchsK33gtl/IOC+3QzangKRIqDrW7L+Vq+
      7RMQ7v5Tc44CLRP/5VMQ7v7TonUGpcFXIY+9C/sn/7Yo5Sd+/efg2z4BS/ujmjbJt74Htm5v
      xk5jNuUUg8WFeVwbGsHuY3euHIbCMFr5Yashi7MQ3/0+hEf/oWj+iW9/D/zeT4LNMDq3Lrm2
      ueIBL+nqHybLrcFC9wFuRgl5SOw/vlyUdrA8c4XEXvgqUaVkwcteRpWSJPbCV4k8fSnt96mL
      PyaJd76fdznFQhYTZGzCc+PvHGMdO/V1olzv0xQaNREisRe+knc5Ob8BogsBTHhm0Np+ELYc
      nwobQe56HlBk8MeeLFiZJOyB+PrTsD72T2Bs2uP/BakrEYT4qz+D5YFnwVbdSKRQRt+GMnAa
      1k/9PZDF/dMqJ1fyyQjL9W0v9b0MkliAtbNwsVsmde5fwTqb838r5qqYWGSB9PcPEkld+ruY
      bwBCCFFVhcRe+ApRQpOFKS8RJrGTTxDZP1yQ8rJBDoyQ2MkniJoIL/0917/0txjPqxy9yTXW
      qhgniz98kCghz/rGuZQrJUn0J18oSMsg506wo6IK7e17wRfvob8KhmEh/O5fIPnmX+ddFlEk
      JH79nbQdzmLCVbfBevc3kfj1d6CGp5B887uwPfocGIt9w+XoMcKSNywPtrIJ0sDpghYrD/wK
      lvZHlsbx88RUo0BacLV7wNUfgNT7iw2XQYiK1Nt/A8veh8G33FlA77KD334cfMtdiP3bp2H7
      xHfAlrvzLOcRKIGRAntZWBjOAvvv/wjK9CUo3u6ClEmICrH7RVg6CpN+yT3zzDPP5OcQAcsW
      X0dc0xEkz/wvWHbdl/OTEwCki/8OEALr8T8uvHNZwlS1gLW7YNn3qbzLActBHngVUveLAFHB
      unaA4SwF8jQ9ucb69OnTEAQBNbc9guRrfwnLngfA8La8fJBHz4DhrOB3/k5e5SyzKd4AAMDw
      AoR7/wuSb+c+ZCkNvwllrhfWe79VBM+yh3XUYL7xobzLmV1IQjj+Ndg//Rxsj/wdiBhF/MWv
      Ivnms1B8AwXwNH8ikQhmZ2fh8/nAOmog/M63kXj9v+ddrtR1EpYjXyyAh0tsGgEAAN98Oxir
      A/LoO1lfI/W/AunK87A9/D0wjLH/3ImJCVy6dCmvMuLxOF5//cYEIWt3wXr0CZR94SewHPws
      pKsnEf+PL0HsOgl55G2Mjo7i5MmT+bqeM5WVlXjyySdx+PBhAEux4xoPI/XxDzdcpuLtBlvu
      XlnIVgg2lQAAQLj320id/78Z15wTokKevoTEq08j+dv/CeudfwKGF3T0Mj1erxderzevjcSm
      pqYgiiIikbUpo1z9QdgeeAb2z/0AJBlG4rWnIfAMysuN2V7GarXCZrvR5LEe/xqU6UuQPRc2
      VJ548f/BevtXCuUeAJPmA6yHPPwmZM/HsP3u06s+V2N+SH2/gDL6DtiGQ7Ac+CzYml2GP/mN
      ghAVHs804vF4QZJsChFrkgwj/tI3YH/sH3N6kqvhKaTe+T7sj/1jXvXfyqYUAAAkXvkWrLf/
      MdiGQ1DG3oPU+3MQKQnLgc+A3/3ASocwGAzi7NmzuP/++2G35955ptygULFWvN1IffjPsP/e
      /85qKJOIccRPfQ3Wzi/DsveTedd/M5s2H0A48d8Q/8kXwFS1gG+5C8KJPwfr3LbGrqqqCrIs
      ryRBU4yHazgEvvUeiB/9C4S7n9K0Uxe9kHpOQZn8CKxrB7j6AwX3ZdMKgHVuh6Xzy7Ac/HzG
      FZx+vx8VFRUF3xSWkh/Wo08gcfrPII+/D7713lXfKXM9EC8/DxKbh/Xol2C96xtQVYJLly+j
      s7O5oEtvNu2vQlEUdLPH0Gmvzmjndrtx//336+QVJRdsDz6L+Et/ArZmN5hyN+ThtyD1nAJj
      r4L12JPg3O0rtrFY5Pp/YwXt1G9aASynMRb6hlD0gxHKYTvxXxH/2ZfBVjSCaz4O28N/nfaN
      Pjc3h5GRERw8eLCgPuQ8PKLLARlZsHxDaNOmeOgR63h5G67I7bA9/DcQ7n5Kszm7Z88ePP74
      46uGVQtBzqNAHo8H1VaCuHM7agXjRoEoxUevWPf29uLAgcJ3cLMh5zeAs0zANW8ETmsx3KGY
      CT1iHQqFMD4+vmZnDr3Y8DwAIQSqupQQo8diOEph2MgTvJRjveEGNMMwKzdzvZuazatzs9mY
      yZdcbDZCKcc6bznfWrjPO42pae+qjtNGbCbHRxEMrV7vcrNNZCEAj8eD+cCCpk22dX107hym
      p6e1y1FETE154PMHNctQ4wFM+aPwTM9o2kCOw+MNrvrIUJscKcVYF/x9lkgkUGYhCMWkDduE
      F/zwB0OQJO2sJ8FRDsGyvvuEkHX9cVWWQ8l4Kxioqgopw8mV8UQCnrFrEMoqM/oz2NeN8clp
      09jkQynEuuACiEVjkFkbXGXayRnr2ThdtbBaeMzPz2mWIQgCJien1j1S+NLFSxie9mX0J5FI
      oLysTPP7ef88OI5FRYb5hvKKCqiMBYnFBU0bEBUsz2dOgtfTJk9KIdYFF8BidBHz/vm8berr
      G9Cxvz2jTV1dHSRJ1Pw+Gglhz+7dcFZlni2GnMLktFe7ntpaiGIK4xMZzsDi7GistkPMlKrL
      WrG90Y2ysgwTd3ra5EkpxLrgAmhw16O8InMzIBsbz9gQrvYPZ7SJxWLwzc0iKaXv3ImpFDjB
      BoeQeRzP3dQMVda+uUG/D3M+P1p27MhYDsCgokL7B+ebncBiUkU0qn38k292AgtRcV2bbMpZ
      zyZfSiHWBReARbBizqv9NM3Wxr+wCIZoP07DCwGU23gIzgbYLOk7d/HYIvx+P9QM/8zIQgAq
      OGxvXruSdBlnTQNuP3YYPu+Mpg2kCDxzizjzrna2mtvtBiFATbX2U8rtrgPP8UiltAWZXTnr
      2+RLKcS64OsI/HNeVFY1ZrQJBoJobd2p+f301DjaDx6EVdBulwNY90C25tbdaG7NaIJKVw0q
      XcD0zAwAV1objufBgcfe3Rn2oLRUQkA/jhzNfLyRqqwzls6XocYpoMJVl185WdrkQynEuuB3
      R1KBamdFRhubYIWSYX1+fX0DktEIwtGEpo3TVYOW3QfQsbNhw77ezLamprzLqKtvgiplOKiZ
      c4BDErFYXNMk4h3F1EIKi4uLeZWTlU2elEKsCy4AZ2UloutMayclFUG/dq/fO+NBUuVQ68p8
      c82EoqqQJAmNjRmeiEoMEzMBBEPaJ2BW1tbDwS2NVuRTTlY2eVIKsS54EygSicDOaa/YCy/4
      ISkKalzaSSzNrbvRXGjHiszw8DDmg2Fsa9F+3auygiOdt4NXtJ/KgXAS5TYGjc0Z7gDnwG0H
      9qC6NkNOLcPjzjvvBI/0pyUWglKIdUHfAJGFANyN2+AQtHdgcLpqMTPjQSiUYbx8E7Jv/0Hc
      e889mp00AIgnRUxe64GjUrtj6vMvYPeunZiamMhQGwOoCjguw/OLEzA91o+kWJxU0FKJdd5J
      8ekIhUKapy76AwFAVeGqrQVXxEkaU5Lw42zvHIgSxz13pu8sR8MLCEZiaNq2DTyrcX/EEC4P
      zMFut6B9j0bHXAzhF7+5gH1727Bfy6YAbPZYFyWbJNORo7FICNF4EqxFQHVV5vHhkkNwos61
      iBqXdoe73OlCuTP9aNQywYgIRgrD1bxf0yYcldF5cA/c27Zv2N1s2Oyx1j2dasdO/XZlNh1K
      Cp7pGVisAqqrM//IM8FzLMoqXbBw2k/V2fkA2vfuxuC1Uezbu3vDdeXDZoj1/wdTa/ASiotx
      NQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MapZoomed' width='192'>
      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
      y90IAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAalklEQVR4nO2dWYxk13nf/3evulW31q6l1+npWchZSJpDiaJNGhG8whKcBQEEQwlgI1EM
      BHoIbCBIgLzkKXlJYCQIECDISxIEUSwgMfIgGbBoQZBtGZIsDodDDclZunum966qrr3qricP
      3bN23XNvDaurq+t+P2AAss+/z/2q+n73nuV/zhEYYwwEEVHE0w6AIE4TSgAi0lACTDuM4c5H
      H2Bjp3KsyLV6aHfNUwhqcpBPOwDiZGFmHXsdCfNlE9/7s+8hlS4im9axX9lCt1ZHN1lGwq4g
      kS3BSOi4evUKhNMOeoxQAkw5gpaC5tSxsQcIggDm9vFoq42ZQh5J2UBTkpDVl5CSLWybWqRu
      fgAQPu8oEGMMghC1r2362NvZRq5YhixG62/5uRPAdV1IkjSqeAhirFAnmIg0lABEpKEEICIN
      JQARaSgBiEhDCUBEGkoAItKMZCaYMQaXub7loiBCFCjXiMkjVAK4Vg8be3XMpDQ82qohn9PR
      tQScW5gFAPTsLr7xrX/g+/u/9/bv4zde/cpoIiaIERIqASQ1DlVqIJ5IQY+10LU8iIzB8zx4
      ngfX9X/6A4DneXAcZyQBE8QoCZUAdr+D7e0tdNtN2ExEQmToOyJEUQRjLNAKIYoiZJl8d8Tk
      EequVGIJ3Lhx46RjIYixQz1TItJQAhCRhhKAiDQj6pkKYB4vl6K1yII4O4xmIsyT0f3sa77l
      9isXR3EZghg51AQiIg0lABFpRtIEEgQBiaz/ZJgSoz4AMZmMJAFEEVh8LeZbnszRonliMglt
      hnu0d4BSJoF6x4YKCy1bwPKRGY4gziqhzXCa1EA8mUajtY2u60EiMxwxBQxhhtuGKArY3tlF
      PpeF6QlPzXABv09mOGJSGcIM9yYAoFQqnWhABDFOaBiUiDSUAESkGWvDvGfa+Nb7t33L331t
      CZcX82OMiIg6Y00A03bxJ3/xqW/5QjFFCUCMFWoCEZGGEoCINJQARKShBCAiDSUAEWlCm+Hu
      P9rFjKFiY7eBTEpD1xbw6sXzJx0fQZwooc1whh5D17Ixl0mgygTo6kuY4QQXy2/626b1rEim
      OWKshDbD1WpVlMslHDR7KKVUtO2nO8MpjGH54Ybv72cWz0OWZUiui5jBWTijSWSaI8ZKaDPc
      tWvXAAD5o3mqzLOVOA6++uc/9P397LkLwLXrLx0kQZwU1AkmIg0lABFpKAGISEMJQEQaSgAi
      0lACEJGGEoCINJQARKShBCAizVC+g72tR9ivd5FMyOhZAl69tHJScRHEWBgqAeK6js7qBuTk
      AnTtqRkOIc1wtIMcMWkMlQCyJKGwdA45XUb7mWNShZDHpEoBCUA7yBHjZrg3gJHBeePQBpc+
      kXAIYrxQJ5iINJQARKShBCAiDSUAEWkoAYhIQwlARBpKACLSUAIQkWYip109z0PLbPqWx1Ud
      qqTC9Ty0upavTo8pUGU6opXwZ2gz3PZ+A6l0HKZ9cma4areCf/Z/ft+3/Jvv/QHeXflb2K62
      8c0/+o6v7l98/V380vXFkwiRmBKGSgDX8+C5DlxRha55J2aG8wJ0bkgdmeuIIIZKgHQ6jY7J
      kE/G0LOFEzPDiQH1SUc6RZVhFPy1Wpx2miP4DHV36EYGF4/McNkTCecQAQJEMc4RHN70siZg
      /or/XqO8bRgJApjQTrAkJTA/83Xfcl1bHl8wxFQzMAFM00Sr2UK+MANh3BGdAFuNDfz77/9b
      3/JvvPNPcaVMe5dGkYEJ8PEHP8ZHH6/ja//4H4LTEDkzWKaCtc9mfcu7r2ljjIaYJAYmgK4n
      8Mu/9iuYltuCuSqc+kX/cjsxxmiISWLgTHBMk/E3P7sJNu5oCGLMDEyAerMDQ1VAI+jEtHMs
      ARizUa02oSoKvQGIqWfAG0DCTM6AK8mTOUZKECPkWAIIgghRFbF5bw38eduzgyAAsir4/hPI
      ExtZBj7kFVHFe7/xZSgv/LxZ28cnd9cxU8zCtAVcuXw2doZTdREX39F9yxMZmjGOKgMTIJ2d
      QbPVgQNAfebnRjaH2TkLDC5k6enOcAJspN74xP8iudpQZrjR6dxD05zncXUumeYiy7EEYMzC
      D95/H3phEReuvvJ8mWsjXyjC6dWfOyZVlERIMX9fvqSwocxwUlhzXaDu0Awnivw2jkQ70kWW
      Y391QVBx6ZU53PygCvsFgSjHoMsAYgWkxhYiQZwcAx97M/kykrMM/j5LgpgOBrYN9isNaFYT
      9zb3xh0PQYyVgW+A2cVlvPH2u5BpPS0x5Qx8AzS2H+B/ffs7sMcdDUGMmYEJ4IgM/WqTrBDE
      1HOsCVTfWkcsO4df+ztvTI0dmiD8OPYGsC0bjzY28MmtW9QEIqaeYwmQyGagCAqMdHwqlkMS
      BI9jTSA9PYNcMoaHWwdwXxAw5qHZbCMRV2F5AvTYdDWS2paJT/f9h34vzRSQ0mh2ZJoYOAxq
      GDEkErljr4fth6toOQo0wYbpMly+eAGMMXiM311m7NA3xBjfk/NE54WrL8jj8/S6/Pq8I121
      08Eff3TTV/eNL3wJSUX1LSfOHgNHgWzHxubW1vECAehUd9B2D/fuecLEDhdNbGDEhDDQDPc3
      P7mDbL6MF5+vswvLSGSK0GMKbE+AIBz+E0V+b+FQI0IIMN4/0YWsL8jkJgji0XX59YlP4gt3
      XWJ6GGiGe/XVC9ALi8cKBVFCOmUAwLG1AgRxFhn4OMtkkrh9++fjjoUgxs5gK0SzA10SaFcI
      YuoZOAoUi8UgqhbICkdMO4N7dAIAp4uHZIcmppyBCWCZDbQaIubmi+OOhyDGyoCNsTzIqoF4
      UqIT9Iip59g9vn3nFnbbLdS7LvUBiKnnWCc4VZ5DvGNhZSlF86jE1HMsAZK5It7ODW77u7aJ
      WqODtKHDdoGETsYw4mwz3DGpmxtoCxrarQPYLnDpwsqR4SykGS6keS1sfcFmOG8oM5wXZNbz
      WOA1ibPFUP3cRCqFxs42LI89f1OFXTgQoHtcHGDJCV9hyMCeXDdsgMTUMNQbIJHK4JVrVxHX
      5OfNcCFNZEFmOAxpSgtvwhutjpgehkoASVZgJJXhf5EgJhR6nBGRhhKAiDSUAESkiURT3uh0
      8es/+Cvf8pnlS0CxNMaIiEkhEgmgWRYur677lie6vTFGQ0wS1AQiIs2ZfgOkmi383v/+v77l
      8zNzQHl25NddP6jhf9z8qW/57954G4vpzMivS4yeM50AImNI9Pq+5XLAkUwvi8s8tEzTv5zs
      EmeGoROg2+1CFgWYLmAk4icRE0GMjaESwOq18OHtzzBbyMJ2GZJPzHDBJjfXdYN1nhdOF7I+
      j4Wrzwtbn/dYF2DWO/ocxOQzVALs7+3DNrswbQPsmf5zkIfmsSaM1yaMLnR9CFefIIw4vpCf
      gTh9hkqA+XMrKC+cAzwXDhNC3xBhzWbDmuFGpkPY+nCk48rINHeGGLoPIEkSIEm0XJKYCiZy
      FEj0PGTrDd9y1aKjO4jRMJEJkOj28PU/+Y5veX7hPLB8fowREdMKNVSJSEMJQEQaSgAi0lAC
      EJGGEoCINJQARKQZKgFss4f96gGsfhfNdvekYiKIsTHUPIDrWHi4uo50PgV4DEYirBkupMkt
      pBnOC6sLbYYLe91wZjiPzHBnhqESwLEdgLlwXBfMe2qIGbXHxwt7muTIPD60gVZUGSoB4skU
      rly/Bk2R4A5jhgvpysST+oJk4U14J+MaDRcfMfkMvTOcLh/uDEdmOGIamEgv0KQj2w7ytbpv
      ueLQ+ZpnBUqAl6BYreF3/t93fctn3voSUKDz1c4C1FMjIg0lABFpKAGISEMJQEQaSgAi0lAC
      EJFmqATwHAu7exWYvQ4aLTLDEWefoeYB+qaFVq2GZleB4DIYieXDXdpCm+H4BrGRm+Ee69xR
      m+HCXZeYfIZKgHa9ChMiNMeB5T7rtQlnXhND6rwAI1nYUycF8UgXeJqkOKQZLtx1iclnqATI
      l+Zg5ByoqgKPPTV8Bfu+jrRhzXBBtYU1zYU1uSGcgS20GQ5khjsrDG2Gi5MZLjT3N2v41vu3
      fcv/0VdvYDafHGNExIuQF+gEaXRM/PiTLd/y3/nV6wCAnm2j1u346opJA4okwW234e7v++qU
      hQUIioKOZaHe8x+kKBspSNREA0AJMBE8qFXx3z/4iW/5H773ZZSSBvq3bqH6H/+Tr27uP/wR
      5FIJd/Z28e3bN311/+rLv45ULPa5Yp4WKAGeYba/gX/+6b/2LU9d+89AvhC6vkRGwqVf0n3L
      teTJPIUvP1jDP/mf3/Yt17/0HhCL4Y8/uonbO9sDNSXDwDffee9E4pskxpoAmmXhK9/7gW/5
      Yq4ELCyNMaLnERmD5vkffSSyIY8+EgBJ9u8Mn1Q3WTOayJ6/61suSofrFRzXhekOXrtgRWRN
      w1gTQPI8nN/wbxMbbf92MBEeUbWhZlscAX9R/4t8vLuDqk8fxdA0vDm3MFR9kwQ1gSJMqtVG
      oVIdWJZznybJTzcf4ed7OwN1i+nMkwTwDtbBrPZAnaDoEHOTt6M3JUCEeednt/D6j340sExZ
      WgS++reHqq///X8Dd/0vB5ZJ829B/9p/GzrGk4YSYAIo7VfwVU7fKPnm20DSGGNEz/OFD2/j
      /McfDywzFheBX/zlMUc0OoZKAOY6aPcsqKKHriMgm0qcVFxTQardwS/cvuNbHn/zi0Aa0Ht9
      LHP6Rqp9uifiFKs1GD7xqdrwR+X+8NY6KvXB8xTFbALvvja+gZChEsA0TdTrdbiOBddjSCeX
      4XkeWEizWZBB7PFxpUHmutMzww2nS9XrePen/uPx8b/79+HOBNfneh7EEDvSuZ4HIWR8zHXB
      mH99jOHJ34urAwunY0913/3re/h4bfCE3hsXS3jn6jwAoNLtwPIxUMYkBbn4UfIdPAAcnwPT
      tRSQ8u+kD5UAnudgb3cHqZQB2xWemsMk/ni2eKRjAbOPj3VBRrJhTWliSDMcC9A9ji3Q1CeG
      M/+JIeMThcfXDRefEPQ9H2l41T0+EfPwv3lDuUI43bO75fGu+0x93779IR41Bm8/c6VQwu/e
      +CIAoPvdfwmv8ulAnXz5NxH7yr/zvd5QCRCLJ3H9+muQZQkMTz9wiFN9hzv/N4xmGFNaWDNc
      mE8iCIEfOKwZ7ul3Es6EF3zdcN/f42sHXzfcTMVJ6f7en76P/r37AzWJt25AeOvtz33doRJA
      lCRo0tmzwYmaheQrq77lUrI3xmheHtnocD+HoEzX5JXkulB8ms3SS6y3qP6X/wq39vywbyRG
      gQTJhZLxnxgSz8iNI6oO93MI4pAz1aeEpouIGYObaap+cjZy884dONvPWz8ikQDEZFG+qKGb
      Hzx6VMprY43lTCeAGDOR+eJHvuVK1v+wbeL0+O0/+z76dz4ZWBZ/7TrwxXfGFsuZTgABgMDz
      tdCirIlEcj3Ifm37gCHcUUOrIohIM943gMAgJf0dn09GMcQAnXw2Oq3EYKR43/fvK8b97egn
      wUslwMH+Dtq2gMW50lC/J0guUtcGj+sCgJJtAjgcleHq0hyrLzHx6Oc3oSmD/77SueHuqc/L
      SyVA27QP58oJ4ozzUgkgeg46dnR7mKJqIza351suqIfmNTFm8XVnZP5hmnmpBJhfOlzY4Hne
      ofGKCUDpNV89i2fhui4YRL5OO9IJUoAufagTFb5ONQ7Na6LG1XlK4lAnxfj1yYc6ISkh/gX/
      tcGCLh3qDJmrQ0w8NIjpccgXLvjHJ8uHn1dN8T+HKIO5Ljwtw9dBAnNdiKWi73WlUumJeU0s
      l/11C/NPTY6ZZaDfHHzR7MozuhXA9mnrZ5af6KT5ecg+DQ2xXH5aX/4iIKmDhamlJzp5aRHQ
      n1+jLTCehS+Ax2cEh9kFjXSkOy3d41t8kCfocw2DPntu7rP/Vj/5EH/xk1vP/WyQbnvzEfar
      B1xdtVIBg4D9yn5gfZsbD1E9aATqPvzZj/Hhzz/l6nZ2d4/93sD6APzkxz/Cnc/uB+gYHq6v
      od5sB+o2H61jZ7/K1zEX62vraLQ6fJ1nY2tnP/Bz2L02Vh88QLtvc3Wtgwo+vvUB9hp9vq5e
      xeb2DizH4+qatQq2dnZhu+w5w+Sx+2B3C3/5wx+g3ne5uk6rjrv37sPx2HM/f/af51pYW13F
      3n7l888DDMqqZCaPfNoI1HXabTgv7D7wok7wbKytr6PZ6nF1j+uzA+oDgHwuDyOZ5Opq+7t4
      8OABtnb3uToAKORnoCcTgbp2uw3nhQmgYzrmodPto9Pp8HXw0G634b6w1uGYTpCwv7WKu2ub
      XF2/14Vtmej0La5OUVQ4HkNck7k6q9uFadnHxkqOXbfbgWnbz60lePYGf4ysaJidLUF65ucv
      6uxeEw/Wt1Gp1p6zjr+oa9f2YDouPlt9NPqJMM+xYDoMmXTwEj7m9rG2ucvXMAbb7EFWfdp4
      z7C3t4OdvUqgTtMUdFtN9Cx/R2EspqHe6qBcmOHWZVomZEVBIha8MqrdbqHiswj9KQxmtwPT
      DWqZClBUBc2WT5v7MV4f29UOrD5/xw3HtiCKgGnzXZaiJEKXPFSafAetpGnYfXgPLZNfn6xp
      2Fm7i7blPwPMmAfXcyGpOjSJs+ZAlDA/V0Y2lYTp+H9/qcICZgtZFDLG6BNAlFWYnTbcEF2L
      eCIFI843P/UsG7LAADG4v76yfA6qGmymarY6KJeL3JVThpFGxkig1uDfYJqqodlogCH48xZn
      ZqAnApaRCjJUTYWuKgE6EaokQtUCPq8gY2V5AaVSmSvTEgYUTUcx7b+RFwDYZhcb+y2Irs8K
      rCMYE1AoFhCw1geSrGJ2bhYSR8g8F/1+H7u7u7A5q/s818b62jqyGQOm46+zug083NxHrV4/
      GStEvlAAcyw4nCV8rt3Ho+19KAp/fUFclaHqadgBTzAAqNVbyGdTXE27cYC9WgMPN7aQiPnf
      ZGa/d9j2rNYCr9s2bdgm/4nYatSwV2vioBbwBvBsrG9so90evL3IU52DVs9Co+5/YPeREN2u
      CUXmf8+KrECSJHgBD65ut4+l+QIEhf/GkxUZ8WQWrZr/XqbMtXHv7n14dh+tvv+bQpQUWP0+
      rM4BOrZ/fJISR7FUQKvVhsJ5UzAIWDq/gqsXF0efAIcjQy5kSUKd8/SUlBjKM2nUm/w/dM9y
      oMjisb7CIGw7eIJOjcVx8fw5LMzzN3NSFBmiKEJRAp7EAFKJOFzGf9QZ6TyMmIiYzt8NemNn
      H1evXcXVVy7xLyqIiKky5ufmA3QyknrsWF/huC7cFvG6kYIST6GY5ieA1evg449uIZnjDBdL
      Cq68ch7b1T5yCf4bvlAqYunCFWTjnERmDJZlwWPgLh8VRRE7W4+wX22O3gu0fv8eTNdF1/bw
      5vVZX93hwnogk05z61tcWgYAlPlvcABAPp/nLswGAEXVMFMsY2eX3/cozy8d1hVwQwBAu9XC
      1vo9SInfwnzGv0mSzuSw1+AnvCwwdE0LrU4XmRQnWQQRjcYBEqks0gan2eI5aHZ6KAas2243
      61h78BlsOYnz5YyvTgRgWRaCuigukzBfzsIOEIqyinxCRKPnIqH639y1vT0IiTTX4CupMays
      rPADA6DGDVy+ePjdjjwB5hfncdAyMc9pXgCHrzVdT0COjW5//Fp1D6xjY7bk/9TptptodXrg
      NBGfEPQ0BADTspBJGzAyecwk/TvqlWoVkiShWOBvrluem0d1fxdW0FYonoOdygF04wDzs0V/
      nahCcnvYrdaRNnz6H54L22WQVR35FD+Z1h8+gqJIaLRNJDX/2yeZiKFlFJDW/e8D5vbR7jsQ
      1CQyOv9WlFX1cLSIqwrPk2HUEdX3BEXTUZzJIpnk39iCIKDb7Y7sLK1WvQY9lcfSHP9VkTDS
      KJfLWJr3fzsNQ7/bRiyRhhbToXE2wu20GuhYHlyL33mEa+OnP7uF3T1/CwUAQJTx+pVXUCoH
      fA6vj+1ah9+HYh46PRPFwgy/CSnKmJ0tQ4mnkDM4nW/XxoO1hxC9Pupti6Nz8HB1Fbl8mtsH
      AABFUeD02+jZo10vcKoLYpjdw+rGLubKnCdY2LoYQ26miHyW36QaNcxz4TgOZkpzXN3ScvCr
      GQAgSrh86SJSOf7wKzwHtUYb6XzAdyfG8Ma1y8gWeA8GD/WDA0BUUF7gPxOtbgcOFP7bUVJQ
      yqdQ6QFzSf83gKAmceMLbx39D6fTyhhisRjcRhuaPNpn9qkuiEnlZjCTGc2Wf6lsHoVcJlSz
      ZZRIsoJ4PA7b4vvYBXi4efNmYKcfjKHb7Qb2ZQABsiQGd24BeJ6L1ft30fd7eooq3rzxFn7h
      jdcQV/nPRF2P49HqfXT6/CaaounwOlXUe/zBi2dn1P2wOxWsb+yi1+2gEVDfsJzqG6BSqaE4
      d3rnAYwCI52FEeKlU69VIckKqrUaspxJQtOyMZPPBq/mFAS0Wk1UqlXu0O/dT27DFnXMzi0g
      pvg8745uwDAPj2anD9nro2O6yHOeXaqqwfGAWMAwdxiURB75GQe5tAFRCx6VG4ZTewN0Wg3Y
      lonP7t5D35p+W7CmaXA9D4mAiTBN09BsNmHZ/O/EcT2UikVoMf5E2LmVi2BWB63uaFZa6Yk4
      Xr32Ore/AwDbuzvIJTXsHnz+A9UFQcTs7Cw0Pckd338ZTi0BEkYaMT2JhOJiY8d/smRaiCdS
      KOZS2Nj03wQXAA6qe2j3bCgK/+V87/4qVlbOo9/hN6l2dnaRK5SQTg6/ie0gmCiDOVZgE222
      PIuup2Ahx59ZPm1OrQm0s7UBWdVwYfF1GMnJ/pJGRa2yh2yOPwGXzRdROwjw9wBYObeAh482
      sbziv44AGKLzHRK700K91UJMzfuLnB7urW2g1W7jwqXJ3knw1N4AxXIZekzDfqUy9o7r6eCB
      SXH0O8E3t6apWFt/yNWo8STOnVsaSRs7NJ4LTxDRaFvIG5xTJuU43nj9Ot79xbchjGzk/mQ4
      tQSo7m5h4+Eael40dmapVA4wk00hk81xde1mHdVqFdkhTqMcG8xD13SQz6UDt2AHDtvucsAM
      9Glzak2gmfIi8oVZ7FYOTiuEsdJtN2ALChTGnwjb3K1AUmNwek0AIfwf44S5qFWrEGUVs4uT
      fWOH5f8Dcrm3MVXOEoMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Syria_CntVSMonth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WeaponsPIE' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVq0lEQVR4nO3de1Qb150H8O+d0WhGEggk3uYlsDFgY2PwAyd14qTN5rR72nSbZk/Tdrft
      adqmSbP/7jn71549++f+0z17urvnbBvn1TZNmqRNE7d5NA+niR0/wDwM2OZlwAYhBEg89JqZ
      u3+YuNgGg4SkkZjf5z+ENPoJ8ZXuvXPvXMY55yDEpASjCyDESBQAYmoUAGJqFABiahQAYmoU
      AGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABi
      ahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoU
      AGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABi
      ahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoUAGJqFABiahQAYmoU
      AGJqFIAMt7i4iHA4DABQVdXgarYei9EFkLVpmoZPPvkEABAIBFBYWAiXywWn0wmLxYL5+XnU
      19dDFEWDK81eFIAMxjmHLMvgnKOqqgqiKEIQBLz33nsoLy9HaWkp/fNvEuOcc6OLIGvz+XyQ
      JAnRaBSKokCWZQSDQXDOkZ+fD6vVanSJWY0CQEyNmkBZoru7G8PDw7BYLCgrK0NLS8umjqfr
      GjRVha5pAOfgXIfKBejMAsYYBIHBIjJIoghBYEl6FZmHApAlKisroSgK+vr6bowK3QnnHFos
      itB8ELPecQSnpzA/68PC7DSWAnOIhJcQC4egxqLgug5d19CPWgxY6iAKAkSRQbFaYLNKyLFb
      UZRvR4nLgWKXAxVFTlQU5SHHJkGyZHcfhAKQJTRNQ21tLYLBIIqKim77Pec6QvNB+EaHMDU6
      gKkrg5jzTSC8ENzwc3AB0HQOTdcAFQhFVMwiDPiBS2P+m+4rCgyuXBtqyvJRX1WIhqoCbN/m
      hl2RNv1a04n6AFlMU2OYHh/BWH8nrl3uxczEGDQ1lvDx+oUduCTsSPjxDkVCXUUB9teXoaWu
      FOWFzoxvPlEAsoymqZgeH8Fw52mM9nZgfsaXtGNvNgArMQbUlLlw9+4KfG5PFcoKcsBY/GE4
      d+4cZFlGU1PTjdtGRkbg8Xhu/BwIBJCbmwtBuH5ed3x8HJFIBLIsw2q1ori4eO06KQCZj3OO
      0EIQA+2fYODcx5idHE/J8yQzACtZRAG7PUV44EAtDjZsg03eeDPp3XffRUlJCXw+H3JycjA5
      OQmXywVVVSGKInp6etDW1gZJksA5x/Hjx3Ho0CEwxhAIBOB2u9HR0QGPxwNJkhCJRKAoClRV
      vX5CMemvliQN13XMTl1Dz4m3MNx1Gmo0YnRJCVE1HZ2DXnQOeuF22vClth144EAt3Lm2dR/r
      dDrBOYfb7cbc3BwURUFxcTHm5uZgsVhQU1MDURThdDqh6zpaW1vR1NSEoaEhyLKM4uJiSJIE
      TdNgtVoxNDSEyspK+P1+VFZW0jdAJuK6jqnRQZx/7w+4eukCuK6l5XlT9Q2wGsVqwf0tHvzd
      PQ0odeds6DHRaBSSJCXUlAKuf5NGo1HIsnzjNgpABuGcY3ZyHO1vv4bRvvPgup7W509nAD6j
      WC144EAtHjnaCNcGvhHWomkahoaGUFxcjO7ubtx1110YGhpCXV3dHR9HTaAMEVoIov3t13D5
      7F82NZKTbcJRFW98cgkfdV7Bw0cb8cVDO6BY4/+35Jxjfn4ekcj1ZuLly5cxNjZGAch0mqri
      0pkTaH/7NYQX540uxzCBxQiOHT+Pd88O4fGHDqCppiiupo6qqujv70dzczOmpqYAAF6vF7qu
      3xgdWg01gQw0MzGOU6+/gInBfqNLAWBME2g1osDwhf21+IcH9yDPoaT0uSgABtB0HV1dZ9H9
      ytOIRdaf1pAumRKAz5S4HPinrx9CU01xwh3f9dCKsDSbC4XwbPsZvDQ+jgUxu6YNpJt3dhH/
      +vQHeO6tLkRjqRkJowCkCeccI7Mz+J9PP8bF6SnoFgnexv3QheyeTJZqms7x6ok+/PtzJ+Cb
      W0z68SkAaaBzjpOjI/j5mVOYC4du3B7OK8Bs1U4DK8seXYNe/PP/vosLw1NJPS4FIMVUXcfx
      i714va8HsVVOaM1U1yPkdBtQWfaZCYbwb898iBOdV5CsrisFIIXCagwvdrXjo5EhrPV2cVGE
      t6EVmkgj0hsRiWn46cun8MqHfdCTEAIKQIqEYlE8134G3ZMT6943mpOH6e1Na4aE3EzTOV54
      uwu/eqcb2ibPllMAUmApGsWz7WcwOONf/87LAttqsOQuSWFVWwsH8PIHvfi/P7RD1RIPAQUg
      yUKxGJ7tOIPh2Zn4HigI8Da0QrWm9sTPVvPHTwfwizfboeuJfX9SAJIoHIvh+Y4zGIn3n3+Z
      qtjhq9tLTaE4HT81gBf/3JNQx5gCkCSqruE33R1xNXtWM19cgWBpVZKqMo+X3r+A1070xx0C
      CkAS6Jzj+MU+9E55N38wxuCra0ZUcWz+WCbCAbzwThc+7hmL63EUgE3inOPk6DA+vjKctGPq
      khVTDS3gKZr/slVpOsd/vXIaF0enN/wYCsAmDc748WZ/X9KPu+QuwWxl5kxMyxbhqIr/ePET
      zMyH1r8zKACbMhcK4aXuDmg8NSu3/J5dCOfkp+TYW5lvbgk/e/X0hoZHKQAJ0nQdL3efR2AD
      V2lLFLdY4G1opQlzCTh7cQK//aB33U4xBSABnHN8NDKEgZmNtzUTFXG64K9ppKHRBLz8Qe9t
      V7S7FQUgARPzQbwzcDFtzzdbWYdQfmHanm+rUDUdP335UyyGo2vehwIQJ1XX8cqFLqjpvGKD
      IMDbsB+ahRbQxOuafx6/ee/Cmk0hCkAcOOc4NTqC8cBc2p87Zs+BbwedJU7EmycvY/Dq7Kq/
      owDEYTwwl9amz62CZdWYq9hBIYiTqun4z99+iqXw7ZeboQBskM51vHmxF2Ejd2pkDNM7mhCm
      BTRxG50K4NUTfbc1hSgAG9TjnYx/hmcKcOH6AhqdFtDE7fWPL2Jqbumm2ygAGxDTNLw7cMno
      Mm6I5uRhunY3NYXiFIlpeOXDm88NUAA24PzEVXgXMuuqbXPltVgqoAU08frzuWFM+Bdu/EwB
      WEdM0/Dh8IDRZdxOEOCtb4Uq0Tap8VA1Hb9d8S1AAVhH79QkfIvJvx5NMqiKHb6d+6gpFKcT
      nVfgD16fLEcBuAOd86ROc06F+eIKzNMCmrjEVB1/PHUZAAXgjsYDc7gyt/oJlIzBGKZ27EVM
      sRtdSVZ55+wQQpEYBWAtnHOcGhsxuowN0a0yvA2ttIAmDoHFCE73XaUArCWkxnDBO2l0GRu2
      5C7BXMV2o8vICnYWwhG5C2V9P6MNMtZywTtp7FnfBEzX7oZ91gd5IWB0KRlHgIZayzUcVTqx
      X74Ep7AEeAUKwGo45+icuGZ0GXHjogWTDa2obP8QQpr3F8tULiGINrkPR+QuVFmmILAVY2Zc
      pwCsZjEWxdAmL29ilIjTDX/NLhQO9sCsPQILVDRKV3C/rQN7rYNQ2Np7rlEAVtE75U3ZOt90
      mK2sg2N6EvZA6lesZQ6OYmEWR22dOCxfQLEwh42MCVAAbsE5x0VfEq7vYyRBgLdxP6rOvgdx
      i+84qbAIWqyXcUTpwi7pCiQW304yFIBbaLqOAX/2f3JeX0CzByX97VuuKcSgo8oyhXvkLhyW
      LyBPWNzQp/1qKAC3uDYfzLrRn7UEyzxw+CeR68u+Dv1qctgS2uRe3Kt0wWOZgMg2PwmEAnCL
      bO38rooxTNW3wBaYgSWaObtRxkOAhgZpFEeUbuy3XoRDiCT1+BSAFTjnGJ7dQgEAoFkVeOtb
      sK37ZBY1hTgKhQDa5F7co3ShXJxOuImzHgrAChzA1eDWO4m0WLQNgW01yL+W2RP7JMTQZB3G
      fcp5NFmHILPUN0UpACsEw2HMR5L7FZsppnfsgX3OB+vSwvp3TiuOCtGHu5Ue3C33oEAIpuzT
      fjUUgBUmF4JGl5AyukXCZMN+VHacAEvSDoubYWch7LMO4H6lA3XSOCzMmPMuFIAVJucza9lj
      soXzCzFTXQ/3SL8h/QEBOjyWCRxVOnFQ7r8+H8dgFIAVppcyc+VXMvk9jXD4J6HMp+/iXnnC
      AtrkXhxVzqNC9CVl+DJZKADLOOeYDRn/iZRygoDJXQdRdeY9CKts3J0sFqhokK7gqNKJZusA
      7MLa1+c0EgVghbnQxjZVyHZRhxPT25tQdLkzyU2h68OX9yhd+JzSjRJhNq0d2kRQAFYIRrLz
      ZFEi5iq2w+GfgGNmatPHsiKKffIAjirnE5qPYyQKwLKYriGqZc8bt2mMwduwH1Vn/gxLLP7m
      CYOOSnFquUPbB7eYacOrG0MBWBaKbe1Zk6tRFTumdu5D2YXTG24KOVgIB+V+3Kt0YrvlakZ1
      aBNBAVi2FM3MTlqqLRRXYH56Ak7v2tuLMujYKY3jqHI+JfNxjEQBWKZlwMkhQzCGqZ37YJub
      Bm76EuRwCfO4W+7BEaUb5aIPQoZ3aBNBAViW1h1fMowuWeFtPAB0TcICFXusQziidKPFehnW
      NMzHMRIFYJmZAwAAS64ieGqu4sn5/077fBwj0XWBllkEk/8pGMN41V70F5vrAlsmf9f/SjDR
      m74WnYn4oOhBvFT5HSyKDqPLSQsKwDKJNqO+jjEM5DTgac9PMGarNrqalKMALJMt1B1aKWB1
      4YWqx3DadTf0LFpLFi8KwDK7lfbgvZUmSHi75Mt4tfybWBK35tWnKQDLZNECkdGf4zaMod+5
      B89UP4GrSoXR1SQdveMrOBXZ6BIy1oxciOerf4jTrru2VJOIArCCizaZuCNVsOLtkq/gtfJH
      ERJsRpeTFBSAZYwx5Nu2xpuaUoyhz7kXxzxP4NoWaBJRAFYosJtj7DsZZuQiPF/9Q5xxHc7q
      JhEFYIWyXKfRJWSVmGDFWyUP4XfbvpG1TSIKwAqlublGl5B9GENvXjOe8fwYk3KZ0dXEjQKw
      gstmpxNiCfLLxXjW8zja8w9mVZOIArACA+DJdxtdRtaKCTKOl34Nb5Q9jIiQHTvYUwBWYIxh
      mzPP6DKyG2Poyj+AZ6t/DJ+1yOhq1kUBuEWtu8DoEraEKaUMxzxPosu5D5m81o4CcIvqfBck
      kWaGJkNUVPCHbX+PP5V+FTGWmXOtKAC3sIoialzUD0gWzgScy2/Dc9U/gt9aaHQ5t6EA3IIx
      hoaiEqPL2FoYw4StAsc8T+CCc6/R1dyEArCKppJSo0vYksKiHb/b9g38qeQhxFhmDDdTAFbh
      lBV4qBmUEpwJOOs6jOerfwS/1fgBBwrAKhhj2FuafWc1swZjuGarxDHPk+jN3WNkIRSAtewp
      3QaRFsqnVFi047XyR/FWyVcMaRIJRQ0UgLXkWmU0FlNnONU4E3DGdReer/4hZqT0Nomkpocp
      AGthjOFAeZXRZZgDY7hmq8Iznh+jP2dXep5TskOq/yIF4E7qi4pQ7MgxugzTWLLk4JWKb+Od
      4r+FylJ7MlLa9RCg5FMA7kRgAo54ao0uw1Q4E/Cp+wh+Vfl9BCwpmpfFBEh7HwVj1Ale176y
      cuRYabF8WjGGUUctnq75CQYddUk/vKX2PggF2wHQMOi6ZIsF99K3gCEWLbl4sfK7+LDwAehJ
      +1dlsB76EdjyCB8FYAPaqjxwyorRZZgSZyI+Kvw8fl35PSyIm++PWbbfB6Fk942fKQAboFgs
      uLdmu9FlmBdjGM6pwy9qnsKwfRPfxkyE9a6nbnz6AxSADTtcWU0jQgabl/Lw66rv46OC+xNa
      dint/hqEwp033UYB2CBJFPGl+kajyzA9nYn4sOhv8GK8TSKrA9bDT9z06Q9QAOLSUFSCXXR2
      2HiMYShnJ35R8xRG7DUbeoh8+EmwnOLbbqcAxEFgDA81NkGmFWMZYV7Kw6+qHsNfCu67Y5NI
      KN0DqeXbt336AxSAuOUrNjxY12B0GWTZZ7va/Kbyu6vvaiNaodz3L2DC6pPtKABxYozhrioP
      dhRk3vI+02IMgzn1+HnNUxi1eW76lbXtcQila0+5pgAkQBQEPNLUDIeUHde+MYt5KR+/rHoM
      J933gAMQy/fDeuCxVZs+n2Gcm3WH6M3rnpzAL8+fzejLfpgS52iODOIb9z0CMb/yjnelb4BN
      aCoppclyGUgQBLR+7lvr/vMDFIBNYYzhSzsbUUf9gYzyhe07UV94+5DnaigAmyQKAh7d20pn
      iTNEc1k5Pr+97o7t/pUoAEmQI8v4TutB2KXMvPqZWVTnu/DI7r1xbXpOAUiSIkcOvrf/EBQL
      hcAIRY4cfKflIKxxXt6eApBE1flu/GPLflgE+rOmU6HDgR8cOIwcOf6FS/ROJdl2dyG+1dxK
      IUiTQrsD39/flvAGh6Y/D3Ds2DE0NTXB7XajoKAAY2NjUFUVmqZhdHQUO3bsQG1tLWZmZuD3
      +2G1WuF2uxEKhXDhwgU0NjYiNzcXqqoiGAyirKwMeXl5uDTtwy87zyGiqka/xC2r0O7ADw4e
      hsuW+Pa2pg/A+++/D6/Xi9LSUgiCAIvFAlmWEQwGYbPZIEkSBgYGcPjwYVy5cgWCICAajeLa
      tWvYtWsXYrEYwuEwVFWF0+mEzWZDU1MTOOcYmZ3Bsx1nEIrFjH6ZW862XCe+t/8Q8pTNbc5n
      +gAsLCwgEAhgcXERRUVFYIzBarUiEonA4XCgu7sbO3fuhKIoCIfDAICZmRmoqgrOOZxOJ1RV
      haqqKCi4fmEnh+Ovk7Im54N4tv0MZkJLhry+rWhnYRG+2dwKexKmopg+AOkQCIfwfMdZjAXm
      jC4l6x2qqMJXd+1JWh+Lemp3wDnH73//e8RiMbzxxhvo6enByZMn4z5OnmLD44fuxsEKutJc
      oiyCgK/t2oOHd+9N6gBDZlykPUO1t7fj0qVLUFUV09PT2LNnD3w+X0LHkkQRX9+9F9X5Lrze
      14OopiW52q0rX7HhW82tqMp3bfgM70ZRE+gOdF3H+Pg4ysvLcfXqVfj9fgiCgObm5oSPyTnH
      1OICXurqwHgwkMRqt6aWsnJ8dVcTbCmaek4BMEhM0/DOwEV8NDIEnd6C29glCV9paELLtvKk
      f+qvRAEwEOcc48EAftfbjXHqIN+wr6wcX27Yhdw0XIyMApABNF3H6fFRvHWpHyHVvOcMih05
      eKixCTsKClP6qb8SBSCDLEaj+GDoMj4eHYGm60aXkzZ2yYoH6+pxqKIKYpqnkFAAMgznHLOh
      EN4dvISOa+Nbun9gkyQcqa7FEU+NYbNoKQAZinMO/9ISPhkdxtnxUUS20LCp22ZHW2U12iqr
      YTN4DQUFIMNxzrEUi+Hc1TGcGhuBfyl7p1TUuNxoq6zG3tJtaW/qrOX/AfHVV/xDq2WBAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World_CntVSMonth' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
